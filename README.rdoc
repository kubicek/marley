= Marley

*Marley* is minimal blog engine without admin interface written in Sinatra framework (http://sinatrarb.heroku.com/).

It has no admin interface for writing posts. Use your favorite text editor to edit plain-text files and synchronize them to server.
Marley uses plain-text files for storing articles and SQLite database for storing comments (set data location in <tt>config.yml</tt>).
It comes with Rake and Capistrano tasks for deploying the application and syncing articles from your local machine to the server.

The +master+ branch is bare application suited for your own styling, +restafari_org+ branch is what will runs www.restafari.org.

It is currently alpha software.

== Ingredients

* Sinatra, Rack and Thin
* ActiveRecord and SQLite
* Typekey Antispam filtering (see <tt>./vendor/antispammer.rb</tt>)
* YAML configuration
* RDiscount for Markdown --> HTML conversion
* Builder for Atom feed generation
* Rake and Capistrano tasks

== Installation and dependencies

You have to install or update following Rubygems:

    sudo gem install sinatra rack thin activerecord sqlite3-ruby rdiscount builder capistrano

Edit this configuration file:

    config/config.example.yml

and rename it to <i>config.yml</i>.

Install the application with this Rake task:

    rake app:install
    
Load this URL in your browser:

    http://localhost:4567

== Deployment

* copy <tt>config.yml</tt> to server

* <tt>cap deploy:setup</tt>
* <tt>cap deploy:cold</tt>
* <tt>cap deploy</tt>

== Synchronizing content

Marley has no administrative interface for writing articles inside some silly <tt><textarea></tt>. It assumes you like to write in your favorite text editor, using Markdown, previewing on the fly, and just synchronize when you're ready to publish.
  
There are several ways how to do that:

* You can be hardcore and write articles over SSH in Vim directly on the server for "just-in-time-publication" when you hit <tt>:w</tt>
* You can be less glorious, of course, and save your articles to some folder on your disk and <tt>scp</tt>-ing said folder to the server. Or use SFTP? Cyberduck drag & drop? Aaargh, not reccommended unless you _really_ like to see what you're doing, in real time.
* You can implement some sane practice and start versioning your writing with Git. (What else?) This way, you can setup remote repository on your server, just <tt>push</tt>-ing changes whenever you feel like you want to say something in public. A <i>post-commit hook</i> is completely neccessary in this case, of course. (It isn't paramount of convenience having to SSH on your server to run <tt>git pull origin master</tt> in some folder.) There will be a Marley Capistrano task for doing that in the future?
* When you already use Git, you can push to Github (where else?), and have Github call Marley by it's Post-Receive Hooks (http://github.com/guides/post-receive-hooks). See the <tt>get "/sync"</tt> route dangling towards the end of the marley.rb? You get the picture.

Of course, put other ideas in the Marley Wiki (http://github.com/karmi/marley/wikis)

== Todo

* Markdown formatting for comments
* Cap task for uploading config.yml to server
* Combined Atom feed for all comments
* Implement data syncing logic (upload, git push to remote with post-receive hook, Github post-commit hook to Marley, etc)
* Implement minimal admin interface for filtering spam comments (dependent on HTTP-Auth)
* Do not show spam comments in HTML and feed (after ^^^)
* Optionally mail new comments to self
* Kick Markdown formatting into a Formatter so everyone can use whatever formatter she likes
* Kick articles extraction logic into an Interface so everyone can use whatever data store she likes, not being plain (text) like me

== Licence

Copyright (c) 2008 Karel Minarik (www.karmi.cz)

Code released under the MIT license, do not reuse graphical assets and styles in the _master_ branch, please
